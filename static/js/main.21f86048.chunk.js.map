{"version":3,"sources":["redux/searchReducer.ts","api/api.ts","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx","App.module.css"],"names":["CHANGE_SEARCH_QUERY","RENEW_SEARCH_RESULTS","initialData","pageSize","toRender","searchResult","kind","totalItems","items","searchQuery","needToRender","wasRendered","configOMB","API","searchFilmsByTitle","title","fetch","then","data","json","App","className","styles","app","Hat","Books","React","memo","useState","searchName","setSearchName","dispatch","useDispatch","changeSearchString","s","type","payload","hat","value","onChange","e","currentTarget","onKeyPress","code","state","useSelector","searchResults","useEffect","renewSearchResults","console","log","booksContainer","map","book","index","volumeInfo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"2OACMA,EAAsB,sBACtBC,EAAuB,uBA0GvBC,EAA+B,CACjCC,SAAU,EACVC,SAAU,EACVC,aAAc,CACVC,KAAM,GACNC,WAAY,EACZC,MAAO,IAEXC,YAAa,GACbC,aAAc,GACdC,YAAa,ICtHXC,EACO,8CAWEC,EARH,CACRC,mBAAoB,SAACC,GACjB,OAAOC,MAAM,GAAD,OAAIJ,EAAJ,iBAHR,0CAGQ,cAAuCG,IAC9CE,MAAK,SAAAC,GAAI,OAAIA,EAAKC,Y,OCUhBC,MATf,WACI,OACI,sBAAKC,UAAWC,IAAOC,IAAvB,UACI,cAACC,EAAD,IACA,cAACC,EAAD,QAOCD,EAAME,IAAMC,MAAK,WAAO,IAAD,EACIC,mBAAS,IADb,mBACzBC,EADyB,KACbC,EADa,KAE1BC,EAAWC,cAKXC,EAAqB,SAACC,GACxBH,EFwEG,CACHI,KAAMnC,EACNoC,QAAS,CACL3B,YE3EuByB,MAQ/B,OACI,sBAAKb,UAAWC,IAAOe,IAAvB,UACI,kDACA,gCACI,uBAAOC,MAAOT,EACPU,SAjBS,SAACC,GACzBV,EAAcU,EAAEC,cAAcH,QAgBgBI,WAX7B,SAACF,GAEN,UADAA,EAAEG,MAEVV,EAAmBJ,MASf,gCACI,yBAAQS,MAAO,QAAf,UACI,wBAAQA,MAAO,QAAf,mBACA,wBAAQA,MAAO,SAAf,uBAEJ,yBAAQA,MAAO,QAAf,UACI,wBAAQA,MAAO,QAAf,mBACA,wBAAQA,MAAO,SAAf,mCAQXb,EAAQC,IAAMC,MAAK,WAE5B,IAAMiB,EAAQC,aAAwC,SAAAD,GAAK,OAAIA,EAAME,iBAC9DrC,EAAoDmC,EAApDnC,YAAaJ,EAAuCuC,EAAvCvC,aACd0B,GADqDa,EAAzBlC,aAHA,YAGyBkC,EAHzB,+CAIjBZ,eAYjB,OATAe,qBAAU,WACFtC,GACAI,EAAIC,mBAAmBL,GAClBQ,MAAK,SAAAZ,GACF0B,EFuBc,SAAC1B,GAC/B,MAAO,CACH8B,KAAMlC,EACNmC,QAAQ,eACD/B,IE3Bc2C,CAAmB3C,SAGzC,CAACI,IACJwC,QAAQC,IAAIN,EAAMvC,aAAaG,OAE3B,qBAAKa,UAAWC,IAAO6B,eAAvB,SAEQ9C,EAAaG,MAAM4C,KAAI,SAACC,EAAMC,GAC1B,OACI,8BAEQD,EAAKE,WAAWxC,OAFduC,WC/DnBE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBzC,MAAK,YAAkD,IAA/C0C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCNRO,EAAcC,YAAgB,CAChCnB,cJqHyB,WAAgE,IAA/DF,EAA8D,uDAArC1C,EAAagE,EAAwB,uCACxF,OAAQA,EAAO/B,MACX,KAAKlC,EACD,OAAO,2BACA2C,GADP,IAEIvC,aAAa,eACN6D,EAAO9B,WAGtB,KAAKpC,EACD,OAAO,2BACA4C,GACAsB,EAAO9B,SAElB,QACI,OAAOQ,MIjINuB,EAAQC,YAAYJ,GCCjCK,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGRK,SAASC,eAAe,SAM5BjB,K,kBCnBAkB,EAAOC,QAAU,CAAC,IAAM,iBAAiB,IAAM,iBAAiB,eAAiB,+B","file":"static/js/main.21f86048.chunk.js","sourcesContent":["//constants\r\nconst CHANGE_SEARCH_QUERY = 'CHANGE_SEARCH_QUERY'\r\nconst RENEW_SEARCH_RESULTS = 'RENEW_SEARCH_RESULTS'\r\n\r\n//types\r\ntype bookType = {\r\n    kind: string,\r\n    id: string,\r\n    etag: string,\r\n    selfLink: string,\r\n    volumeInfo: {\r\n        title: string,\r\n        subtitle: string,\r\n        authors: string[],\r\n        publishedDate: string,\r\n        description: string,\r\n        industryIdentifiers: [\r\n            {\r\n                type: string,\r\n                identifier: string\r\n            }\r\n        ],\r\n        readingModes: {\r\n            text: boolean,\r\n            image: boolean\r\n        },\r\n        pageCount: number,\r\n        printType: string,\r\n        categories: string[],\r\n        maturityRating: string,\r\n        allowAnonLogging: boolean,\r\n        contentVersion: string,\r\n        panelizationSummary: {\r\n            containsEpubBubbles: boolean,\r\n            containsImageBubbles: boolean\r\n        },\r\n        imageLinks: {\r\n            smallThumbnail: string,\r\n            thumbnail: string,\r\n        },\r\n        language: string,\r\n        previewLink: string,\r\n        infoLink: string,\r\n        canonicalVolumeLink: string,\r\n    },\r\n    saleInfo: {\r\n        country: string,\r\n        saleability: string,\r\n        isEbook: false\r\n    },\r\n    accessInfo: {\r\n        country: string,\r\n        viewability: string,\r\n        embeddable: boolean,\r\n        publicDomain: boolean,\r\n        textToSpeechPermission: string,\r\n        epub: {\r\n            isAvailable: boolean\r\n        },\r\n        pdf: {\r\n            isAvailable: boolean\r\n        },\r\n        webReaderLink: string,\r\n        accessViewStatus: string,\r\n        quoteSharingAllowed: boolean,\r\n    },\r\n    searchInfo: {\r\n        textSnippet: string,\r\n    },\r\n}\r\ntype bookSearchType = {\r\n    kind: string,\r\n    totalItems: number,\r\n    items: bookType[],\r\n}\r\nexport type searchStateType = {\r\n    searchResult: bookSearchType,\r\n    pageSize: number,\r\n    toRender: number,\r\n    searchQuery: string | false,\r\n    needToRender: bookType[],\r\n    wasRendered: bookType[],\r\n}\r\ntype actionsType = changeSearchQueryActionType\r\n    | renewSearchResultsActionType\r\n\r\ntype changeSearchQueryActionType = ReturnType<typeof changeSearchQuery>\r\ntype renewSearchResultsActionType = ReturnType<typeof renewSearchResults>\r\n\r\n//action creators\r\nexport const renewSearchResults = (searchResult: bookSearchType) => {\r\n    return {\r\n        type: RENEW_SEARCH_RESULTS,\r\n        payload: {\r\n            ...searchResult,\r\n        },\r\n    } as const\r\n}\r\nexport const changeSearchQuery = (searchQuery: string) => {\r\n    return {\r\n        type: CHANGE_SEARCH_QUERY,\r\n        payload: {\r\n            searchQuery,\r\n        }\r\n    } as const\r\n}\r\n\r\n//data\r\nconst initialData: searchStateType = {\r\n    pageSize: 2,\r\n    toRender: 0,\r\n    searchResult: {\r\n        kind: '',\r\n        totalItems: 0,\r\n        items: [],\r\n    },\r\n    searchQuery: '',\r\n    needToRender: [],\r\n    wasRendered: [],\r\n}\r\n\r\nexport const searchReducer = (state: searchStateType = initialData, action: actionsType) => {\r\n    switch (action.type) {\r\n        case RENEW_SEARCH_RESULTS:\r\n            return {\r\n                ...state,\r\n                searchResult: {\r\n                    ...action.payload\r\n                },\r\n            }\r\n        case CHANGE_SEARCH_QUERY:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const configOMB = {\r\n    baseURL: 'https://www.googleapis.com/books/v1/volumes',\r\n};\r\nconst key = 'AIzaSyCI0tPq7SoEIfpnkJRjqbu_YIDUeMVvZHU';\r\nconst API = {\r\n    searchFilmsByTitle: (title: string) => {\r\n        return fetch(`${configOMB.baseURL}/?key=${key}&q=${title}`)\r\n            .then(data => data.json())\r\n    },\r\n};\r\n\r\n\r\nexport default API;\r\n","import React, {KeyboardEvent, ChangeEvent, useState, useEffect} from 'react';\nimport styles from './App.module.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {changeSearchQuery, renewSearchResults, searchStateType} from \"./redux/searchReducer\";\nimport {stateType} from \"./redux/store\";\nimport preloader from './common/preloader.gif'\nimport API from \"./api/api\";\n\nfunction App() {\n    return (\n        <div className={styles.app}>\n            <Hat/>\n            <Books/>\n        </div>\n    );\n}\n\nexport default App;\n\nexport const Hat = React.memo(() => {\n    const [searchName, setSearchName] = useState('')\n    const dispatch = useDispatch()\n\n    const onSearchFieldChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setSearchName(e.currentTarget.value)\n    }\n    const changeSearchString = (s: string) => {\n        dispatch(changeSearchQuery(s))\n    }\n    const onEnterPress = (e: KeyboardEvent<HTMLInputElement>) => {\n        const key = e.code\n        if (key === 'Enter') {\n            changeSearchString(searchName)\n        }\n    }\n    return (\n        <div className={styles.hat}>\n            <h1>Search for books</h1>\n            <div>\n                <input value={searchName}\n                       onChange={onSearchFieldChange} onKeyPress={onEnterPress}/>\n                <div>\n                    <select value={'first'}>\n                        <option value={'first'}>first</option>\n                        <option value={'second'}>second</option>\n                    </select>\n                    <select value={'first'}>\n                        <option value={'first'}>first</option>\n                        <option value={'second'}>second</option>\n                    </select>\n                </div>\n            </div>\n\n        </div>\n    )\n})\nexport const Books = React.memo(() => {\n    //data\n    const state = useSelector<stateType, searchStateType>(state => state.searchResults)\n    const {searchQuery, searchResult, needToRender, ...rest} = state\n    const dispatch = useDispatch()\n\n    //useEffect\n    useEffect(() => {\n        if (searchQuery) {\n            API.searchFilmsByTitle(searchQuery)\n                .then(searchResult => {\n                    dispatch(renewSearchResults(searchResult))\n                })\n        }\n    }, [searchQuery])\n    console.log(state.searchResult.items)\n    return (\n        <div className={styles.booksContainer}>\n            {\n                searchResult.items.map((book, index) => {\n                    return (\n                        <div key={index}>\n                            {\n                                book.volumeInfo.title\n                            }\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n})","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore } from \"redux\";\r\nimport {searchReducer} from \"./searchReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    searchResults: searchReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer)\r\n\r\n//types\r\nexport type stateType = ReturnType<typeof store.getState>\r\nexport type dispatchType = typeof store.dispatch","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1YSN_\",\"hat\":\"App_hat__216gS\",\"booksContainer\":\"App_booksContainer__LZ7oM\"};"],"sourceRoot":""}