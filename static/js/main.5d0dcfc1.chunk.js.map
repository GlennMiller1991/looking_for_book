{"version":3,"sources":["components/Search/Search.module.css","api/api.ts","components/Search/Search.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","configOMB","API","searchFilmsByTitle","title","fetch","then","data","json","initialData","kind","totalItems","items","Lesson3","useState","searchName","setSearchName","serachResult","setSerachResult","errorTitleRequest","setErrorTitleRequest","console","log","type","value","onChange","e","currentTarget","onClick","catch","volumeInfo","description","App","Search","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,MAAQ,wB,uICDpBC,EACO,8CAWEC,EARH,CACRC,mBAAoB,SAACC,GACjB,OAAOC,MAAM,GAAD,OAAIJ,EAAJ,iBAHR,0CAGQ,cAAuCG,IAC9CE,MAAK,SAAAC,GAAI,OAAIA,EAAKC,Y,cCmEzBC,EAA8B,CAChCC,KAAM,GACNC,WAAY,EACZC,MAAO,IA+BIC,EA7BC,WAAO,IAAD,MACkBC,mBAAS,uBAD3B,mBACXC,EADW,KACCC,EADD,OAEsBF,mBAAyBL,GAF/C,mBAEXQ,EAFW,KAEGC,EAFH,OAGgCJ,oBAAkB,GAHlD,mBAGXK,EAHW,KAGQC,EAHR,KAclB,OADAC,QAAQC,IAAIL,GAER,gCACI,kDACA,gCACI,6BAAI,kDACJ,uBAAOM,KAAK,OAAOC,MAAOT,EAAYU,SAAU,SAACC,GAAD,OAAOV,EAAcU,EAAEC,cAAcH,UACrF,wBAAQI,QAhBD,WACXT,GAAmBC,GAAqB,GAC5ClB,EAAIC,mBAAmBY,GAClBT,MAAK,SAAAC,GACFW,EAAgBX,GAChBS,EAAc,OAEjBa,OAAM,kBAAMT,GAAqB,OAS9B,uBAEJ,qCACKH,QADL,IACKA,GADL,UACKA,EAAcL,MAAM,UADzB,iBACK,EAAwBkB,kBAD7B,aACK,EAAoCC,cAEzC,2BC5FGC,MARf,WACE,OACE,8BACE,cAACC,EAAD,OCOSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5d0dcfc1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"Search_movie__3KIRn\"};","const configOMB = {\r\n    baseURL: 'https://www.googleapis.com/books/v1/volumes',\r\n};\r\nconst key = 'AIzaSyCI0tPq7SoEIfpnkJRjqbu_YIDUeMVvZHU';\r\nconst API = {\r\n    searchFilmsByTitle: (title: string) => {\r\n        return fetch(`${configOMB.baseURL}/?key=${key}&q=${title}`)\r\n            .then(data => data.json())\r\n    },\r\n};\r\n\r\n\r\nexport default API;\r\n","import React, {useState} from 'react';\r\nimport API from '../../api/api';\r\nimport styles from './Search.module.css'\r\n\r\ntype bookType = {\r\n    kind?: string,\r\n    \"id\"?: string,\r\n    \"etag\"?: string,\r\n    \"selfLink\"?: string,\r\n    \"volumeInfo\"?: {\r\n        \"title\"?: string,\r\n        \"subtitle\"?: string,\r\n        \"authors\"?: string[],\r\n        \"publishedDate\"?: string,\r\n        \"description\"?: string,\r\n        \"industryIdentifiers\"?: [\r\n            {\r\n                \"type\": string,\r\n                \"identifier\": string\r\n            }\r\n        ],\r\n        \"readingModes\"?: {\r\n            \"text\": boolean,\r\n            \"image\": boolean\r\n        },\r\n        \"pageCount\"?: number,\r\n        \"printType\"?: string,\r\n        \"categories\"?: string[],\r\n        \"maturityRating\"?: string,\r\n        \"allowAnonLogging\"?: boolean,\r\n        \"contentVersion\"?: string,\r\n        \"panelizationSummary\"?: {\r\n            \"containsEpubBubbles\": boolean,\r\n            \"containsImageBubbles\": boolean\r\n        },\r\n        \"imageLinks\"?: {\r\n            \"smallThumbnail\": string,\r\n            \"thumbnail\": string,\r\n        },\r\n        \"language\"?: string,\r\n        \"previewLink\"?: string,\r\n        \"infoLink\"?: string,\r\n        \"canonicalVolumeLink\"?: string,\r\n    },\r\n    \"saleInfo\"?: {\r\n        \"country\": string,\r\n        \"saleability\": string,\r\n        \"isEbook\": false\r\n    },\r\n    \"accessInfo\"?: {\r\n        \"country\": string,\r\n        \"viewability\": string,\r\n        \"embeddable\": boolean,\r\n        \"publicDomain\": boolean,\r\n        \"textToSpeechPermission\": string,\r\n        \"epub\"?: {\r\n            \"isAvailable\": boolean\r\n        },\r\n        \"pdf\"?: {\r\n            \"isAvailable\": boolean\r\n        },\r\n        \"webReaderLink\"?: string,\r\n        \"accessViewStatus\"?: string,\r\n        \"quoteSharingAllowed\"?: boolean,\r\n    },\r\n    \"searchInfo\"?: {\r\n        \"textSnippet\": string,\r\n    },\r\n}\r\ntype bookSearchType = {\r\n    kind: string,\r\n    totalItems: number,\r\n    items: bookType[],\r\n}\r\nconst initialData: bookSearchType = {\r\n    kind: '',\r\n    totalItems: 0,\r\n    items: [],\r\n}\r\nconst Lesson3 = () => {\r\n    const [searchName, setSearchName] = useState('How to use this API');\r\n    const [serachResult, setSerachResult] = useState<bookSearchType>(initialData);\r\n    const [errorTitleRequest, setErrorTitleRequest] = useState<boolean>(false)\r\n    const searchFilm = () => {\r\n        if (errorTitleRequest) setErrorTitleRequest(false)\r\n        API.searchFilmsByTitle(searchName)\r\n            .then(data => {\r\n                setSerachResult(data)\r\n                setSearchName('')\r\n            })\r\n            .catch(() => setErrorTitleRequest(true))\r\n    };\r\n    console.log(serachResult)\r\n    return (\r\n        <div>\r\n            <h1>Google Books Api</h1>\r\n            <div>\r\n                <h3><p>Search by name:</p></h3>\r\n                <input type=\"text\" value={searchName} onChange={(e) => setSearchName(e.currentTarget.value)}/>\r\n                <button onClick={searchFilm}>Search</button>\r\n            </div>\r\n            <div>\r\n                {serachResult?.items[0]?.volumeInfo?.description}\r\n            </div>\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\nexport default Lesson3;\r\n\r\ntype BookPropsType = {\r\n    book: bookType,\r\n}\r\nexport const Book: React.FC<BookPropsType> = (props) => {\r\n    return (\r\n        <div className={styles.movie}>\r\n{/*            <img src={props.book.volumeInfo?.description}\r\n                 alt={'no poster'} className={styles.poster}/>*/}\r\n            <div className={styles.rest}>\r\n                {props.book.volumeInfo?.description}\r\n                <hr/>\r\n{/*                {props.book.Released}\r\n                <hr/>\r\n                {props.book.Plot}\r\n                <hr/>\r\n                {props.book.Actors}\r\n                <hr/>\r\n                {props.book.Awards}\r\n                <hr/>*/}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport Search from './components/Search/Search';\n\nfunction App() {\n  return (\n    <div>\n      <Search />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}